version: '3'

services:

  nginx_server:
    image: jwilder/nginx-proxy
    container_name: nginx_proxy
    restart: unless-stopped
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:rw
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - ./uploadsize.conf:/etc/nginx/conf.d/uploadsize.conf:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - "default"
      - "proxy-tier"

  proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: unless-stopped
    environment:
      - NGINX_PROXY_CONTAINER=nginx_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes:
      - nginx_proxy
    depends_on:
      - nginx_proxy
    links:
      - nginx_proxy
    networks:
      - "default"
      - "proxy-tier"
 
  elasticsearch:
    build: elasticsearch
    env_file: ${PROJECT_LOCATION}/docker/local/.env
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
   
  redis_server:
    image: fballiano/redis-volatile
    restart: unless-stopped
    container_name: redis
    depends_on:
      - apache2_server
      - varnish_server
      - database_server
    links:
      - apache2_server
      - database_server
    ports:
      - "6379:6379"
    
  clusterdata:
    image: fballiano/redis-volatile
      
  varnish_server:
    image: fballiano/varnish
    restart: unless-stopped
    container_name: varnish
    depends_on:
      - apache2_server
    volumes:
      - ./varnish.vcl:/etc/varnish/default.vcl
      - ./varnish.secret:/etc/varnish/secret
    environment:
      - CACHE_SIZE=256M
    ports:
      - "6081:6081"
      - "6082:6082"
    links:
      - apache2_server
      - database_server

  apache2_server:
    build:
      context: ./apache2_server/
    restart: unless-stopped
    container_name: apache2-php
    depends_on:
      - database_server
      - cache
      - clusterdata
    links:
      - database_server
      - cache
      - clusterdata
    volumes:
      - ./magento2:/var/www/html
      - ~/.composer/auth.json:/root/.composer/auth.json
      # Enable the next line if you want to add a custom php.ini
      #- ./php.ini:/usr/local/etc/php/conf.d/999-customphp.ini
  
  database_server:
    image: mysql:5.7
    restart: always
    container_name: database
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
        
  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025    
      
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    container_name: phpmyadmin
    depends_on:
      - database_server
    environment:
     - PMA_ARBITRARY=1
    ports:
     - 8090:80
    links:
      - database_server
    volumes:
     - /sessions 
  
  rabbitmq:
    image: rabbitmq:3.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always  
  
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    environment:
      - VIRTUAL_HOST=portainer.DOMAIN.TLD
      - LETSENCRYPT_HOST=portainer.DOMAIN.TLD
      - LETSENCRYPT_EMAIL=EMAIL
    volumes:
      - ./portainer/:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"

volumes:
  certs:
  vhost.d:
  html:
  dbdata:

networks:
  proxy-tier:
